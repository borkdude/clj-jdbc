#!/usr/bin/env bash

set -eo pipefail

if [ -z "$CLJ_JDBC_XMX" ]; then
    export CLJ_JDBC_XMX="-J-Xmx4500m"
fi

if [ -z "$GRAALVM_HOME" ]; then
    echo "Please set GRAALVM_HOME"
    exit 1
fi

$GRAALVM_HOME/bin/gu install native-image

CLJ_JDBC_VERSION=$(cat resources/CLJ_JDBC_VERSION)

export JAVA_HOME=$GRAALVM_HOME

SVM_JAR=$(find "$GRAALVM_HOME" | grep svm.jar)
$GRAALVM_HOME/bin/javac -cp "$SVM_JAR" resources/CutOffCoreServicesDependencies.java

if [ -z "$CLJ_JDBC_JAR" ]; then
   lein with-profiles +reflection do run
   lein do clean, uberjar
  CLJ_JDBC_JAR=${CLJ_JDBC_JAR:-"target/clj-jdbc-$CLJ_JDBC_VERSION-standalone.jar"}
fi

CLJ_JDBC_BINARY=${CLJ_JDBC_BINARY:-"clj-jdbc"}

args=( -jar $CLJ_JDBC_JAR \
            -H:Name=$CLJ_JDBC_BINARY \
            -H:+ReportExceptionStackTraces \
            -J-Dclojure.spec.skip-macros=true \
            -J-Dclojure.compiler.direct-linking=true \
            "-H:IncludeResources=CLJ_JDBC_VERSION" \
            "-H:IncludeResources=SCI_VERSION" \
            "-H:IncludeResources=.*.properties|.*sql"
            -H:ReflectionConfigurationFiles=reflection.json \
            --initialize-at-run-time=java.lang.Math\$RandomNumberGeneratorHolder \
            --initialize-at-build-time \
            -H:Log=registerResource: \
            -H:EnableURLProtocols=http,https \
            --enable-all-security-services \
            -H:+JNI \
            --verbose \
            --no-fallback \
            --no-server \
            --report-unsupported-elements-at-runtime \
            "--initialize-at-run-time=org.postgresql.sspi.SSPIClient" \
            "$CLJ_JDBC_XMX" )

if [ "$CLJ_JDBC_STATIC" = "true" ]; then
    args+=("--static")
fi

$GRAALVM_HOME/bin/native-image "${args[@]}"

if [ ! -z "$(command -v lein)" ]; then
    lein clean
fi
